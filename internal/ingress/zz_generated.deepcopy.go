// +build !ignore_autogenerated

/*
Copyright 2021 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package ingress

import (
	v1 "k8s.io/api/core/v1"
	v1beta1 "k8s.io/api/networking/v1beta1"
	annotations "k8s.io/ingress-nginx/internal/ingress/annotations"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backend) DeepCopyInto(out *Backend) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(v1.Service)
		(*in).DeepCopyInto(*out)
	}
	out.Port = in.Port
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]Endpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.SessionAffinity.DeepCopyInto(&out.SessionAffinity)
	out.UpstreamHashBy = in.UpstreamHashBy
	out.TrafficShapingPolicy = in.TrafficShapingPolicy
	if in.AlternativeBackends != nil {
		in, out := &in.AlternativeBackends, &out.AlternativeBackends
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backend.
func (in *Backend) DeepCopy() *Backend {
	if in == nil {
		return nil
	}
	out := new(Backend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieSessionAffinity) DeepCopyInto(out *CookieSessionAffinity) {
	*out = *in
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieSessionAffinity.
func (in *CookieSessionAffinity) DeepCopy() *CookieSessionAffinity {
	if in == nil {
		return nil
	}
	out := new(CookieSessionAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(v1.ObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ingress) DeepCopyInto(out *Ingress) {
	*out = *in
	in.Ingress.DeepCopyInto(&out.Ingress)
	if in.ParsedAnnotations != nil {
		in, out := &in.ParsedAnnotations, &out.ParsedAnnotations
		*out = new(annotations.Ingress)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ingress.
func (in *Ingress) DeepCopy() *Ingress {
	if in == nil {
		return nil
	}
	out := new(Ingress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Location) DeepCopyInto(out *Location) {
	*out = *in
	if in.PathType != nil {
		in, out := &in.PathType, &out.PathType
		*out = new(v1beta1.PathType)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(Ingress)
		(*in).DeepCopyInto(*out)
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(v1.Service)
		(*in).DeepCopyInto(*out)
	}
	out.Port = in.Port
	out.BasicDigestAuth = in.BasicDigestAuth
	if in.Denied != nil {
		in, out := &in.Denied, &out.Denied
		*out = new(string)
		**out = **in
	}
	out.CorsConfig = in.CorsConfig
	in.ExternalAuth.DeepCopyInto(&out.ExternalAuth)
	in.RateLimit.DeepCopyInto(&out.RateLimit)
	out.Redirect = in.Redirect
	out.Rewrite = in.Rewrite
	in.Whitelist.DeepCopyInto(&out.Whitelist)
	out.Proxy = in.Proxy
	out.ProxySSL = in.ProxySSL
	out.Connection = in.Connection
	if in.DefaultBackend != nil {
		in, out := &in.DefaultBackend, &out.DefaultBackend
		*out = new(v1.Service)
		(*in).DeepCopyInto(*out)
	}
	out.Logs = in.Logs
	out.InfluxDB = in.InfluxDB
	in.FastCGI.DeepCopyInto(&out.FastCGI)
	if in.CustomHTTPErrors != nil {
		in, out := &in.CustomHTTPErrors, &out.CustomHTTPErrors
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	out.ModSecurity = in.ModSecurity
	out.Mirror = in.Mirror
	out.Opentracing = in.Opentracing
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Location.
func (in *Location) DeepCopy() *Location {
	if in == nil {
		return nil
	}
	out := new(Location)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SessionAffinityConfig) DeepCopyInto(out *SessionAffinityConfig) {
	*out = *in
	in.CookieSessionAffinity.DeepCopyInto(&out.CookieSessionAffinity)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SessionAffinityConfig.
func (in *SessionAffinityConfig) DeepCopy() *SessionAffinityConfig {
	if in == nil {
		return nil
	}
	out := new(SessionAffinityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficShapingPolicy) DeepCopyInto(out *TrafficShapingPolicy) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficShapingPolicy.
func (in *TrafficShapingPolicy) DeepCopy() *TrafficShapingPolicy {
	if in == nil {
		return nil
	}
	out := new(TrafficShapingPolicy)
	in.DeepCopyInto(out)
	return out
}
